<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.core.mapper.AdminMapper">

    <!-- 用户列表 -->
    <resultMap type="com.demo.core.model.Admin" id="AdminListMapper">
        <id property="id" column="id" />
        <result property="groupId" column="group_id"/>
        <result property="loginName" column="login_name"/>
        <result property="password" column="password"/>
        <result property="jobNumber" column="job_number"/>
        <result property="position" column="position"/>
        <result property="createAid" column="create_aid"/>
        <result property="createTime" column="create_time" />
        <association property="role" javaType="com.demo.core.model.Role">
            <id property="id" column="rid" />
            <result property="roleName" column="role_name" />
        </association>
        <collection property="permissions" ofType="Permission">
            <id property="id" column="pid"/>
            <result property="permissionName" column="permission_name"/>
        </collection>
    </resultMap>

    <!-- 根据用户姓名获取用户信息 -->
    <select id="getUserByName" resultMap="AdminListMapper">
        SELECT
        *
        FROM
        bs_admin
        where login_name = #{loginName}
    </select>

    <!-- 查询校验用户密码 -->
    <select id="getAdminPassById" resultMap="AdminListMapper">
        SELECT * FROM bs_admin WHERE id = #{userId} AND password = #{oldPass}
    </select>

    <!-- 获取后台用户列表 -->
    <select id="getAdminList" resultMap="AdminListMapper">
        SELECT
        a.id,
        a.login_name,
        a.password,
        r.id as rid,
        r.role_name,
        p.id as pid,
        p.permission_name
        FROM
        (select
        *
        FROM
        bs_admin
        limit #{offset}, #{size}
        ) a
        LEFT JOIN
        bs_admin_role ar
        ON
        a.id = ar.admin_id
        LEFT JOIN
        bs_role r
        ON
        ar.role_id = r.id
        left JOIN
        bs_role_permission rp
        on rp.role_id = r.id
        LEFT JOIN
        bs_permission p
        on p.id = rp.permission_id
        order by a.create_time DESC
    </select>
    
    <select id="findOne" resultMap="AdminListMapper">
        SELECT
        *
        FROM
        bs_admin
        where id=#{id}
    </select>

    <delete id="deleteAdminRole">
      delete
      from
      bs_admin_role
      where admin_id=#{id}
    </delete>

    
    <delete id="deleteRolePermission">
      delete
      from
      bs_role_permission
      where role_id=#{id}
    </delete>
    
    <insert id="createAdminRole">
      INSERT into
      bs_admin_role
      (admin_id,role_id,create_time,create_aid)
      value
      (#{adminId},#{roleId},#{createTime},#{createAid})
    </insert>

    <insert id="createRolePermission">
        INSERT into
        bs_role_permission
        (role_id,permission_id,create_time,create_aid)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.roleId},#{item.permissionId},#{item.createTime},#{item.createAid})
        </foreach>
    </insert>
</mapper>